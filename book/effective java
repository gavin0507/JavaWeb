
第一章：引言
1.类型
Java语言支持四种类型：接口（interface）、类（class）、数组（array）、和基本类型（primitive）。
前三种类型通常被称为引用类型（reference type），类实例和数据是对象（object），而基本类型的值则不是对象。
类的成员（member）由它的域（field）、方法（method）、成员类（member class）和成员接口（member interface）组成。
方法的签名（signature）由它的名称和所有参数类型组成，签名不包括它的返回类型。

第二章：创建和销毁对象
该章节主要是介绍创建和销毁对象，何时以及如何创建对象，何时以及如何避免创建对象，如何能确保对象能够适时的销毁，以及如何管理对象销毁之前
必须进行的各种清理动作。
1.考虑用静态工厂方法代替构造器
一般情况下，为了让调用者获取他自身的一个实例，最常用的方法是提供一个共有的构造器。不过还有一种方法，类可以提供一个静态工厂方法（static
factory method），他只是返回类实例的静态方法。
类通过静态工厂方法来提供它的客户端，而不是通过构造器，优势如下：
<1>有名称
   当一个类需要多个带有相同签名的构造器时，就用静态工厂方法代替构造器，并且慎重的选择名称以便突出他们之间的区别。
<2>不必在每次调用的时候都创建一个新的对象
   不可变类可以使用预先构建好的实例或者说把构建好的实例缓存起来，进行重复利用，从而避免了创建重复对象。
<3>可以返回原返回类型的任何子类型的对象。
   这样可以选择返回对象的类时有了更大的灵活性。对应的案例为：Java.unti.collections
   
